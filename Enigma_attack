'''
this is an attack on the key repetition in the enigma protocol.
'''
from Enigma import Enigma_I
from itertools import permutations
import multiprocessing as mp
import pandas as pd
import pandas as pd
import string
import time


def find_loops(positional_table):
    letters = string.ascii_uppercase
    alignments = [[4,1], [5,2], [6,3]]
    loop_lists = []
    
    for align in alignments:
        while len(letters)>0:
            begin = 0
            begin = letters[0]

            begin = positional_table[align[0]==begin[0]][align[1]]
            

        
        loop_lists.append(loop_lengths)
    
    return loop_lists

def analysis(enigma, keys,rotor_setting_dictionary):
    alphabet = string.ascii_uppercase
    for key in keys:
        enigma.set_key(key)
        for letter in alphabet:
            row = []
            positional_table = pd.DataFrame(columns=[1,2,3,4,5,6])
            for _ in range(6):
                row.append(enigma.enc_dec(letter))
            positional_table.loc[len(positional_table)] = row
            loop = find_loops(positional_table)
        rotor_setting_dictionary.loc[len(rotor_setting_dictionary)] = [key , loop]


rotors = ['I','II','III']

rotor_permutations = permutations(rotors)

alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

enigma = Enigma_I([],'I','II','III','Reflector_B','AAA')
positional_table = pd.DataFrame(columns=[1,2,3,4,5,6])
rotor_setting_dictionary = pd.DataFrame(columns=['Key','Signature'])

def parallelization(enigma,rotors):    
    processes = []

    for i in alphabet:
        for j in alphabet:
            for k in alphabet:
                p = mp.Process(target=analysis,args=[enigma,i+j+k,rotors])
                p.start()
                processes.append(p)
    processes.join()

positional_table = pd.DataFrame(columns=[0,1,2,3,4,5,6]) 
for letter in alphabet:
    row = [letter]
    for _ in range(6):
        row.append(enigma.enc_dec(letter))
    positional_table.loc[len(positional_table)] = row
print(positional_table)

print(find_loops(positional_table))




#TODO: set the table of loops
